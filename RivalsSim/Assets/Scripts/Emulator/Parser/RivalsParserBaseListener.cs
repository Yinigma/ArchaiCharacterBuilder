//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from RivalsParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRivalsParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class RivalsParserBaseListener : IRivalsParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.script"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScript([NotNull] RivalsParser.ScriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.script"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScript([NotNull] RivalsParser.ScriptContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBlock([NotNull] RivalsParser.IfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBlock([NotNull] RivalsParser.IfBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.whileLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileLoop([NotNull] RivalsParser.WhileLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.whileLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileLoop([NotNull] RivalsParser.WhileLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.doUntil"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoUntil([NotNull] RivalsParser.DoUntilContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.doUntil"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoUntil([NotNull] RivalsParser.DoUntilContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.forLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForLoop([NotNull] RivalsParser.ForLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.forLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForLoop([NotNull] RivalsParser.ForLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] RivalsParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] RivalsParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.repeatLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeatLoop([NotNull] RivalsParser.RepeatLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.repeatLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeatLoop([NotNull] RivalsParser.RepeatLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.withBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithBlock([NotNull] RivalsParser.WithBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.withBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithBlock([NotNull] RivalsParser.WithBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] RivalsParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] RivalsParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.blockOrLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockOrLine([NotNull] RivalsParser.BlockOrLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.blockOrLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockOrLine([NotNull] RivalsParser.BlockOrLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.blockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStatement([NotNull] RivalsParser.BlockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.blockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStatement([NotNull] RivalsParser.BlockStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] RivalsParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] RivalsParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.nonBreakingStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonBreakingStatement([NotNull] RivalsParser.NonBreakingStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.nonBreakingStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonBreakingStatement([NotNull] RivalsParser.NonBreakingStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.assignStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStatement([NotNull] RivalsParser.AssignStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.assignStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStatement([NotNull] RivalsParser.AssignStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] RivalsParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] RivalsParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] RivalsParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] RivalsParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerPrimary([NotNull] RivalsParser.IntegerPrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerPrimary([NotNull] RivalsParser.IntegerPrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerUnary([NotNull] RivalsParser.IntegerUnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerUnary([NotNull] RivalsParser.IntegerUnaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerFactor([NotNull] RivalsParser.IntegerFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerFactor([NotNull] RivalsParser.IntegerFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerTerm([NotNull] RivalsParser.IntegerTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerTerm([NotNull] RivalsParser.IntegerTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerShiftTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerShiftTerm([NotNull] RivalsParser.IntegerShiftTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerShiftTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerShiftTerm([NotNull] RivalsParser.IntegerShiftTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerExpression([NotNull] RivalsParser.IntegerExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerExpression([NotNull] RivalsParser.IntegerExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRealPrimary([NotNull] RivalsParser.RealPrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRealPrimary([NotNull] RivalsParser.RealPrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRealUnary([NotNull] RivalsParser.RealUnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRealUnary([NotNull] RivalsParser.RealUnaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRealFactor([NotNull] RivalsParser.RealFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRealFactor([NotNull] RivalsParser.RealFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRealTerm([NotNull] RivalsParser.RealTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRealTerm([NotNull] RivalsParser.RealTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRealExpression([NotNull] RivalsParser.RealExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRealExpression([NotNull] RivalsParser.RealExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolPrimary([NotNull] RivalsParser.BoolPrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolPrimary([NotNull] RivalsParser.BoolPrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolUnary([NotNull] RivalsParser.BoolUnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolUnary([NotNull] RivalsParser.BoolUnaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolFactor([NotNull] RivalsParser.BoolFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolFactor([NotNull] RivalsParser.BoolFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolTerm([NotNull] RivalsParser.BoolTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolTerm([NotNull] RivalsParser.BoolTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolComparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolComparison([NotNull] RivalsParser.BoolComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolComparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolComparison([NotNull] RivalsParser.BoolComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExpression([NotNull] RivalsParser.BoolExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExpression([NotNull] RivalsParser.BoolExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.stringPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringPrimary([NotNull] RivalsParser.StringPrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.stringPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringPrimary([NotNull] RivalsParser.StringPrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.stringTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringTerm([NotNull] RivalsParser.StringTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.stringTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringTerm([NotNull] RivalsParser.StringTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.stringExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringExpression([NotNull] RivalsParser.StringExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.stringExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringExpression([NotNull] RivalsParser.StringExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.referencePrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferencePrimary([NotNull] RivalsParser.ReferencePrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.referencePrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferencePrimary([NotNull] RivalsParser.ReferencePrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.referenceUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferenceUnary([NotNull] RivalsParser.ReferenceUnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.referenceUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferenceUnary([NotNull] RivalsParser.ReferenceUnaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.referenceChain"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferenceChain([NotNull] RivalsParser.ReferenceChainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.referenceChain"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferenceChain([NotNull] RivalsParser.ReferenceChainContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.referenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferenceExpression([NotNull] RivalsParser.ReferenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.referenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferenceExpression([NotNull] RivalsParser.ReferenceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.dataStructureAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataStructureAccess([NotNull] RivalsParser.DataStructureAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.dataStructureAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataStructureAccess([NotNull] RivalsParser.DataStructureAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] RivalsParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] RivalsParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLiteral([NotNull] RivalsParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLiteral([NotNull] RivalsParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.mapAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMapAccess([NotNull] RivalsParser.MapAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.mapAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMapAccess([NotNull] RivalsParser.MapAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.listAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListAccess([NotNull] RivalsParser.ListAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.listAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListAccess([NotNull] RivalsParser.ListAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.gridAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGridAccess([NotNull] RivalsParser.GridAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.gridAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGridAccess([NotNull] RivalsParser.GridAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.arrayAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAccess([NotNull] RivalsParser.ArrayAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.arrayAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAccess([NotNull] RivalsParser.ArrayAccessContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
