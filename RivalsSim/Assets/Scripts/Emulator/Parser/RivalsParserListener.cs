//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from RivalsParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RivalsParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IRivalsParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScript([NotNull] RivalsParser.ScriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScript([NotNull] RivalsParser.ScriptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlock([NotNull] RivalsParser.IfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlock([NotNull] RivalsParser.IfBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.whileLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileLoop([NotNull] RivalsParser.WhileLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.whileLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileLoop([NotNull] RivalsParser.WhileLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.doUntil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoUntil([NotNull] RivalsParser.DoUntilContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.doUntil"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoUntil([NotNull] RivalsParser.DoUntilContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.forLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForLoop([NotNull] RivalsParser.ForLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.forLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForLoop([NotNull] RivalsParser.ForLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] RivalsParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] RivalsParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.repeatLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatLoop([NotNull] RivalsParser.RepeatLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.repeatLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatLoop([NotNull] RivalsParser.RepeatLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.withBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithBlock([NotNull] RivalsParser.WithBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.withBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithBlock([NotNull] RivalsParser.WithBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] RivalsParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] RivalsParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.blockOrLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockOrLine([NotNull] RivalsParser.BlockOrLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.blockOrLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockOrLine([NotNull] RivalsParser.BlockOrLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStatement([NotNull] RivalsParser.BlockStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStatement([NotNull] RivalsParser.BlockStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] RivalsParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] RivalsParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.nonBreakingStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonBreakingStatement([NotNull] RivalsParser.NonBreakingStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.nonBreakingStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonBreakingStatement([NotNull] RivalsParser.NonBreakingStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStatement([NotNull] RivalsParser.AssignStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStatement([NotNull] RivalsParser.AssignStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] RivalsParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] RivalsParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] RivalsParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] RivalsParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerPrimary([NotNull] RivalsParser.IntegerPrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerPrimary([NotNull] RivalsParser.IntegerPrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerUnary([NotNull] RivalsParser.IntegerUnaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerUnary([NotNull] RivalsParser.IntegerUnaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerFactor([NotNull] RivalsParser.IntegerFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerFactor([NotNull] RivalsParser.IntegerFactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerTerm([NotNull] RivalsParser.IntegerTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerTerm([NotNull] RivalsParser.IntegerTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerShiftTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerShiftTerm([NotNull] RivalsParser.IntegerShiftTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerShiftTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerShiftTerm([NotNull] RivalsParser.IntegerShiftTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.integerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerExpression([NotNull] RivalsParser.IntegerExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.integerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerExpression([NotNull] RivalsParser.IntegerExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRealPrimary([NotNull] RivalsParser.RealPrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRealPrimary([NotNull] RivalsParser.RealPrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRealUnary([NotNull] RivalsParser.RealUnaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRealUnary([NotNull] RivalsParser.RealUnaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRealFactor([NotNull] RivalsParser.RealFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRealFactor([NotNull] RivalsParser.RealFactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRealTerm([NotNull] RivalsParser.RealTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRealTerm([NotNull] RivalsParser.RealTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.realExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRealExpression([NotNull] RivalsParser.RealExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.realExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRealExpression([NotNull] RivalsParser.RealExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolPrimary([NotNull] RivalsParser.BoolPrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolPrimary([NotNull] RivalsParser.BoolPrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolUnary([NotNull] RivalsParser.BoolUnaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolUnary([NotNull] RivalsParser.BoolUnaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolFactor([NotNull] RivalsParser.BoolFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolFactor([NotNull] RivalsParser.BoolFactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolTerm([NotNull] RivalsParser.BoolTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolTerm([NotNull] RivalsParser.BoolTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolComparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolComparison([NotNull] RivalsParser.BoolComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolComparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolComparison([NotNull] RivalsParser.BoolComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExpression([NotNull] RivalsParser.BoolExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExpression([NotNull] RivalsParser.BoolExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.stringPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringPrimary([NotNull] RivalsParser.StringPrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.stringPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringPrimary([NotNull] RivalsParser.StringPrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.stringTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringTerm([NotNull] RivalsParser.StringTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.stringTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringTerm([NotNull] RivalsParser.StringTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.stringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringExpression([NotNull] RivalsParser.StringExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.stringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringExpression([NotNull] RivalsParser.StringExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.referencePrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReferencePrimary([NotNull] RivalsParser.ReferencePrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.referencePrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReferencePrimary([NotNull] RivalsParser.ReferencePrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.referenceUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReferenceUnary([NotNull] RivalsParser.ReferenceUnaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.referenceUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReferenceUnary([NotNull] RivalsParser.ReferenceUnaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.referenceChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReferenceChain([NotNull] RivalsParser.ReferenceChainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.referenceChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReferenceChain([NotNull] RivalsParser.ReferenceChainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.referenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReferenceExpression([NotNull] RivalsParser.ReferenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.referenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReferenceExpression([NotNull] RivalsParser.ReferenceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.dataStructureAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataStructureAccess([NotNull] RivalsParser.DataStructureAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.dataStructureAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataStructureAccess([NotNull] RivalsParser.DataStructureAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] RivalsParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] RivalsParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] RivalsParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] RivalsParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.mapAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapAccess([NotNull] RivalsParser.MapAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.mapAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapAccess([NotNull] RivalsParser.MapAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.listAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListAccess([NotNull] RivalsParser.ListAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.listAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListAccess([NotNull] RivalsParser.ListAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.gridAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGridAccess([NotNull] RivalsParser.GridAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.gridAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGridAccess([NotNull] RivalsParser.GridAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RivalsParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAccess([NotNull] RivalsParser.ArrayAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RivalsParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAccess([NotNull] RivalsParser.ArrayAccessContext context);
}
